version: '3.8'
services:
  pine-jenkins:
    container_name: pine-jenkins
    hostname: pine-jenkins
    restart: always
    build:
      context: ./jenkins
      dockerfile: Dockerfile
      args:
        GITHUB_JENKINS_TOKEN: ${GITHUB_JENKINS_TOKEN}
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ~/docker_compose/jenkins_configuration:/var/jenkins_home
    deploy:
      resources:
        limits:
          memory: '1024M'
    ulimits:
      nproc: 262144
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
  pine-sonarqube-db:
    image: postgres
    container_name: pine-sonarqube-db
    hostname: pine-sonarqube-db
    restart: always
    environment:
      POSTGRES_DB: ${SONAR_DB}
      POSTGRES_USER: ${SONAR_DB_USER}
      POSTGRES_PASSWORD: ${SONAR_DB_PASSWORD}
    ports:
      - "5051:5432"
    volumes:
      - ~/docker_compose/sonarqube-postgresql:/var/lib/postgresql
      - ~/docker_compose/sonarqube-postgresql/sonarqube-postgresql_data:/var/lib/postgresql/data
    ulimits:
      nproc: 262144
      nofile:
        soft: 32000
        hard: 40000
  pine-jfrog-db:
    image: postgres
    container_name: pine-jfrog-db
    hostname: pine-jfrog-db
    restart: always
    environment:
      POSTGRES_DB: ${JFROG_DB}
      POSTGRES_USER: ${JFROG_DB_USER}
      POSTGRES_PASSWORD: ${JFROG_DB_PASSWORD}
    ports:
      - "5052:5432"
    volumes:
      - ~/docker_compose/jfrog-postgresql:/var/lib/postgresql
      - ~/docker_compose/jfrog-postgresql/jfrog-postgresql_data:/var/lib/postgresql/data
    ulimits:
      nproc: 262144
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
  pine-concourse-db:
    container_name: pine-concourse-db
    hostname: pine-concourse-db
    restart: always
    image: postgres
    environment:
      POSTGRES_DB: ${CONCOURSE_DB}
      POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
      POSTGRES_USER: ${CONCOURSE_DB_USER}
      PGDATA: /database
    ports:
      - "5053:5432"
    volumes:
      - ~/docker_compose/concourse-postgresql:/var/lib/postgresql
      - ~/docker_compose/concourse-postgresql/concourse-postgresql_data:/var/lib/postgresql/data
    ulimits:
      nproc: 262144
      nofile:
        soft: 32000
        hard: 40000
  pine-concourse-db-2:
    container_name: pine-concourse-db-2
    hostname: pine-concourse-db-2
    restart: always
    image: postgres
    environment:
      POSTGRES_DB: ${CONCOURSE_DB}
      POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
      POSTGRES_USER: ${CONCOURSE_DB_USER}
      PGDATA: /database
    ports:
      - "5054:5432"
    volumes:
      - ~/docker_compose/concourse-postgresql-2:/var/lib/postgresql
      - ~/docker_compose/concourse-postgresql-2/concourse-postgresql_data:/var/lib/postgresql/data
    ulimits:
      nproc: 262144
      nofile:
        soft: 32000
        hard: 40000
  # wsl -d docker-desktop
  # sysctl -w vm.max_map_count=262144
  # set vm.max_map_count=262144 in /etc/sysctl.conf then execute sysctl -p
  pine-sonarqube:
    image: sonarqube:community
    container_name: pine-sonarqube
    hostname: pine-sonarqube
    privileged: true
    user: root
    restart: always
    environment:
      SONAR_JDBC_URL: ${SONAR_JDBC_URL}
      SONAR_JDBC_USERNAME: ${SONAR_DB_USER}
      SONAR_JDBC_PASSWORD: ${SONAR_DB_PASSWORD}
      SONAR_SEARCH_JAVAADDITIONALOPTS: "-Dbootstrap.system_call_filter=false"
    ports:
      - "9000:9000"
    volumes:
      - ~/docker_compose/sonarqube/sonarqube_data:/opt/sonarqube/data
      - ~/docker_compose/sonarqube/sonarqube_extensions:/opt/sonarqube/extensions
      - ~/docker_compose/sonarqube/sonarqube_logs:/opt/sonarqube/logs
    depends_on:
      - pine-sonarqube-db
    links:
      - pine-sonarqube-db
    ulimits:
      nproc: 262144
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
  pine-jfrog:
    image: docker.bintray.io/jfrog/artifactory-oss
    container_name: pine-jfrog
    hostname: pine-jfrog
    restart: always
    environment:
      JF_SHARED_DATABASE_TYPE: ${JF_SHARED_DATABASE_TYPE}
      JF_SHARED_DATABASE_DRIVER: ${JF_SHARED_DATABASE_DRIVER}
      JF_SHARED_DATABASE_URL: ${JF_SHARED_DATABASE_URL}
      JF_SHARED_DATABASE_USERNAME: ${JFROG_DB_USER}
      JF_SHARED_DATABASE_PASSWORD: ${JFROG_DB_PASSWORD}
    ports:
      - "8082:8082"
      - "8081:8081"
    depends_on:
      - pine-jfrog-db
    links:
      - pine-jfrog-db
    ulimits:
      nproc: 262144
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
  pine-concourse:
    image: concourse/concourse
    container_name: pine-concourse
    hostname: pine-concourse
    restart: always
    command: quickstart
    privileged: true
    depends_on: [ pine-concourse-db ]
    ports: [ "8083:8080" ]
    environment:
      CONCOURSE_POSTGRES_HOST: pine-concourse-db
      CONCOURSE_POSTGRES_USER: ${CONCOURSE_DB_USER}
      CONCOURSE_POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
      CONCOURSE_POSTGRES_DATABASE: ${CONCOURSE_DB}
      CONCOURSE_EXTERNAL_URL: ${CONCOURSE_EXTERNAL_URL}
      CONCOURSE_ADD_LOCAL_USER: ${CONCOURSE_ADD_LOCAL_USER}:${CONCOURSE_ADD_LOCAL_PASSWORD}
      CONCOURSE_MAIN_TEAM_LOCAL_USER: ${CONCOURSE_MAIN_TEAM_LOCAL_USER}
      CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER: overlay
      CONCOURSE_CLIENT_SECRET: ${CONCOURSE_CLIENT_SECRET}
      CONCOURSE_TSA_CLIENT_SECRET: ${CONCOURSE_TSA_CLIENT_SECRET}
      CONCOURSE_X_FRAME_OPTIONS: allow
      CONCOURSE_CONTENT_SECURITY_POLICY: "*"
      CONCOURSE_CLUSTER_NAME: ${CONCOURSE_CLUSTER_NAME}
      CONCOURSE_WORKER_CONTAINERD_DNS_SERVER: "8.8.8.8"
      CONCOURSE_WORKER_RUNTIME: "containerd"
  pine-concourse-web:
    image: concourse/concourse
    container_name: pine-concourse-web
    hostname: pine-concourse-web
    restart: always
    command: web
    privileged: true
    depends_on: [ pine-concourse-db-2 ]
    ports: [ "8084:8080" ]
    volumes:
      - ~/docker_compose/concourse/keys:/concourse-keys
    environment:
      CONCOURSE_POSTGRES_HOST: pine-concourse-db-2
      CONCOURSE_POSTGRES_PORT: 5432
      CONCOURSE_POSTGRES_DATABASE: ${CONCOURSE_DB}
      CONCOURSE_POSTGRES_USER: ${CONCOURSE_DB_USER}
      CONCOURSE_POSTGRES_PASSWORD: ${CONCOURSE_DB_PASSWORD}
      CONCOURSE_ADD_LOCAL_USER: ${CONCOURSE_ADD_LOCAL_USER}:${CONCOURSE_ADD_LOCAL_PASSWORD}
      CONCOURSE_MAIN_TEAM_LOCAL_USER: ${CONCOURSE_MAIN_TEAM_LOCAL_USER}
      CONCOURSE_EXTERNAL_URL: "http://localhost:8084"
      CONCOURSE_CLUSTER_NAME: ${CONCOURSE_CLUSTER_NAME}
      CONCOURSE_SESSION_SIGNING_KEY: /concourse-keys/session_signing_key
      CONCOURSE_TSA_HOST_KEY: /concourse-keys/tsa_host_key
      CONCOURSE_TSA_AUTHORIZED_KEYS: ./concourse-keys/authorized_worker_keys
  pine-concourse-worker:
      image: concourse/concourse
      container_name: pine-concourse-worker
      hostname: pine-concourse-worker
      restart: always
      command: worker
      privileged: true
      depends_on: [ pine-concourse-web ]
      volumes:
        - ~/docker_compose/concourse/keys:/concourse-keys
      environment:
        CONCOURSE_WORK_DIR: /var/lib/concourse
        CONCOURSE_TSA_HOST: pine-concourse-web:2222
        CONCOURSE_TSA_PUBLIC_KEY: /concourse-keys/tsa_host_key.pub
        CONCOURSE_TSA_WORKER_PRIVATE_KEY: /concourse-keys/worker_key
        CONCOURSE_GARDEN_DNS_PROXY_ENABLE: "true"
        CONCOURSE_GARDEN_DNS_SERVER: "1.1.1.1,8.8.8.8"

