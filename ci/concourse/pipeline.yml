groups:
  - name: dev
    jobs:
      - build-pine-java-core
  - name: uat
    jobs:
      - uat-pine-java-core

resources:
  - name: repo
    type: git
    icon: github
    source:
      uri: git@github.com:saman-oss/pine-java-core.git
      branch: main
      private_key: ((git-key))

jobs:
  - name: build-pine-java-core
    public: true
    plan:
      - get: repo
      #        trigger: true
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: maven
              tag: 3.8.6-openjdk-18
          inputs:
            - name: repo
          outputs:
            - name: repo
          run:
            path: sh
            args:
              - -exc
              - |
                mvn -f repo/pom.xml validate
                mvn -f repo/pom.xml clean package -DskipTests=true -s repo/settings.xml -P source,javadoc,license
                mvn -f repo/pom.xml test -s repo/settings.xml
  - name: uat-pine-java-core
    plan:
      - get: repo
      #        passed: [ build-pine-java-core ]
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: maven
              tag: 3.8.6-openjdk-18
          inputs:
            - name: repo
          outputs:
            - name: repo
          params:
            PRIVKEY: ((git-key))
            PUBKEY: ((git-key-pub))
          run:
            path: sh
            args:
              - -exc
              - |
                mkdir ~/.ssh
                ls ~/.ssh/
                set +x
                echo "$PRIVKEY" > ~/.ssh/id_rsa
                echo "$PUBKEY" > ~/.ssh/id_rsa.pub
                chmod 600 ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa.pub
                echo "Host *" > ~/.ssh/config
                echo "    StrictHostKeyChecking no" >> ~/.ssh/config
                set -x
                
                mvn -f repo/pom.xml validate
                mvn -f repo/pom.xml clean package -DskipTests=true -s repo/settings.xml -P source,javadoc,license
                mvn -f repo/pom.xml test -s repo/settings.xml
                mvn -f repo/pom.xml checkstyle:check -s repo/settings.xml -P checkstyle
                mvn -f repo/pom.xml install -DskipTests=true -s repo/settings.xml
                mvn -f repo/pom.xml site:site site:stage -s repo/settings.xml -P site,javadoc,changelog,test-report
                mvn -f repo/pom.xml scm-publish:publish-scm -s repo/settings.xml -P publish
