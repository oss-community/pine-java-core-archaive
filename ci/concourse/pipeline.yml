groups:
  - name: dev
    jobs:
      - dev-pine-java-core
  - name: uat
    jobs:
      - uat-pine-java-core
  - name: prod
    jobs:
      - prod-pine-java-core

resources:
  - name: repo
    type: git
    icon: github
    source:
      uri: git@github.com:saman-oss/pine-java-core.git
      branch: main
      private_key: ((github-key))

jobs:
  - name: dev-pine-java-core
    plan:
      - get: repo
      #        trigger: true
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: samanalishiri/openjdk17
              tag: latest
          caches:
            - path: $HOME/.m2/repository
          inputs:
            - name: repo
          outputs:
            - name: artifact
          run:
            path: sh
            args:
              - -exc
              - |
                mvn -f repo/pom.xml validate
                mvn -f repo/pom.xml clean package -DskipTests=true -s repo/settings.xml -P source,javadoc,license
                mvn -f repo/pom.xml test -s repo/settings.xml
  - name: uat-pine-java-core
    plan:
      - get: repo
        passed: [ dev-pine-java-core ]
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: samanalishiri/openjdk17
              tag: latest
          caches:
            - path: $HOME/.m2/repository
          inputs:
            - name: repo
          outputs:
            - name: artifact
          params:
            GITHUB-USER-NAME: ((github-user-name))
            GITHUB-USER-EMAIL: ((github-user-email))
            PRIVKEY: ((github-key))
            PUBKEY: ((github-key-pub))
          run:
            path: sh
            args:
              - -exc
              - |
                git config --global user.email "$GITHUB-USER-NAME"
                git config --global user.name "$GITHUB-USER-EMAIL"
                
                mkdir ~/.ssh
                ls ~/.ssh/
                set +x
                echo "$PRIVKEY" > ~/.ssh/id_rsa
                echo "$PUBKEY" > ~/.ssh/id_rsa.pub
                chmod 600 ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa.pub
                echo "Host *" > ~/.ssh/config
                echo "    StrictHostKeyChecking no" >> ~/.ssh/config
                set -x
                
                mvn -f repo/pom.xml validate
                mvn -f repo/pom.xml clean package -DskipTests=true -s repo/settings.xml -P source,javadoc,license
                mvn -f repo/pom.xml test -s repo/settings.xml
                mvn -f repo/pom.xml checkstyle:check -s repo/settings.xml -P checkstyle
                mvn -f repo/pom.xml install -DskipTests=true -s repo/settings.xml
                mvn -f repo/pom.xml site:site site:stage -s repo/settings.xml -P site,javadoc,changelog,test-report,github
                mvn -f repo/pom.xml scm-publish:publish-scm -s repo/settings.xml -P site,github
  - name: prod-pine-java-core
    plan:
      - get: repo
        passed: [ uat-pine-java-core ]
      - task: build
        privileged: true
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: samanalishiri/openjdk17
              tag: latest
          caches:
            - path: $HOME/.m2/repository
          inputs:
            - name: repo
          outputs:
            - name: artifact
          params:
            PRIVKEY: ((github-key))
            PUBKEY: ((github-key-pub))
            GITHUB-USER-NAME: ((github-user-name))
            GITHUB-USER-EMAIL: ((github-user-email))
            GITHUB_PACKAGE_TOKEN: ((github-package-token))
            GITHUB_ARTIFACTORY_URL: ((github-artifactory-url))
            SONAR_TOKEN: ((sonar-token))
            SONAR_URL: ((sonar-url))
            JFROG_ARTIFACTORY_USERNAME: ((jfrog-artifactory-username))
            JFROG_ARTIFACTORY_PASSWORD: ((jfrog-artifactory-encrypted-password))
            JFROG_ARTIFACTORY_SNAPSHOT_URL: ((jfrog-artifactory-snapshot-ur))
            JFROG_ARTIFACTORY_CONTEXT_URL: ((jfrog-artifactory-context-url))
            JFROG_ARTIFACTORY_REPOSITORY_PREFIX: ((jfrog-artifactory-repository-prefix))
            NEXUS_ARTIFACTORY_USERNAME: ((nexus-artifactory-username))
            NEXUS_ARTIFACTORY_PASSWORD: ((nexus-artifactory-password))
            NEXUS_ARTIFACTORY_HOST_URL: ((nexus-artifactory-host-url))
            NEXUS_ARTIFACTORY_SNAPSHOT_URL: ((nexus-artifactory-snapshot-url))
            NEXUS_ARTIFACTORY_RELEASE_URL: ((nexus-artifactory-release-url))
          run:
            path: sh
            args:
              - -exc
              - |
                git config --global user.email "$GITHUB-USER-NAME"
                git config --global user.name "$GITHUB-USER-EMAIL"
                
                mkdir ~/.ssh
                ls ~/.ssh/
                set +x
                echo "$PRIVKEY" > ~/.ssh/id_rsa
                echo "$PUBKEY" > ~/.ssh/id_rsa.pub
                chmod 600 ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa.pub
                echo "Host *" > ~/.ssh/config
                echo "    StrictHostKeyChecking no" >> ~/.ssh/config
                set -x
                
                mvn -f repo/pom.xml validate
                mvn -f repo/pom.xml clean package -DskipTests=true -s repo/settings.xml -P source,javadoc,license
                mvn -f repo/pom.xml test -s repo/settings.xml
                mvn -f repo/pom.xml checkstyle:check -s repo/settings.xml -P checkstyle
                mvn -f repo/pom.xml install -DskipTests=true -s repo/settings.xml
                mvn -f repo/pom.xml site:site site:stage -s repo/settings.xml -P site,javadoc,changelog,test-report,github
                mvn -f repo/pom.xml scm-publish:publish-scm -s repo/settings.xml -P site,github
                mvn -f repo/pom.xml sonar:sonar -s repo/settings.xml -P sonar
                mvn -f repo/pom.xml deploy -s repo/settings.xml -P jfrog
                mvn -f repo/pom.xml deploy -s repo/settings.xml -P github
                mvn -f repo/pom.xml deploy -s settings.xml -P nexus -DskipTests=true